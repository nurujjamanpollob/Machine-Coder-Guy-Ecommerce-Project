/*
 * Copyright (c) 2021 Nurujjaman Pollob, All Right Reserved.
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *           http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 *
 */

// top lvl build script goes here
buildscript {

    dependencies {

        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.10"

    }
}

// new styled plugin declaration!
plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

// we are simply describing parent group with version declaration for spring boot sub modules
// to keep all information persistent with DRY principle.
subprojects {

    group = 'com.nurujjamanpollob.machinecoderguystore'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            // you can import your own dependency management module here
            //  mavenBom("org.springframework.boot:spring-boot-dependencies:2.1.7.RELEASE")
        }
    }

}


repositories {
    mavenCentral()
}


// needed these two groovy syntax for bootjar main class error
// as we don't need main class in our parent project
bootJar {
    enabled = false
}

jar {
    enabled = true
}

// useful - if you need to import classpath, you can paste here
// for now - I do not need it.
dependencies {

}

// Java unit test invocation as gradle task
test {
    useJUnitPlatform()
}